module;

object my_name {
  mutable name= "World";
 }

operation set_name(name) {
  my_name.name = name;
}
entity book {
  key isbn:text;
  title:text;
  author:text;
}
operation create_book(isbn: text, title: text, author: text) {
  val adminPubkey = chain_context.args.admin_pubkey;
  require(op_context.is_signer(adminPubkey), "Only admin can create books");

  create book ( .isbn = isbn, .title = title, .author = author );
}
query get_all_books() {
  return book @* { } (
    .isbn,
    .title,
    .author
  );
}
entity book_review {
  index book: book;
  reviewer_name: text;
  review: text;
  rating: integer;
}
operation create_book_review(isbn: text, reviewer_name: text, review: text, rating: integer) {
  val book = require(book @? { .isbn ==  isbn }, "Book with isbn %s not found".format(isbn));
  create book_review (
    book,
    reviewer_name,
    review,
    rating
  );
}
query get_all_reviews_for_book(isbn: text) {
  require(book @? { .isbn ==  isbn }, "Book with isbn %s not found".format(isbn));
  val reviews = book_review @* { .book.isbn == isbn } (
    book_review_dto(
      book = .book.to_struct(),
      .reviewer_name,
      .review,
      .rating
    )
  );
  return reviews;
}
struct book_review_dto {
  book: struct<book>;
  reviewer_name: text;
  review: text;
  rating: integer;
}
struct module_args {
  admin_pubkey: byte_array;
}

query hello_world() = "Hello %s!".format(my_name.name);
